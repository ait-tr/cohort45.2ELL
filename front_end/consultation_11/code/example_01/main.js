// ## Задание 4. Простые числа в заданном промежутке

// Нужно создать две функции.

// Первая функция должна принимать число и возвращать результат булевого типа -
// является ли число простым, или нет. Число является простым, если оно делиться без остатка только на 1 и само на себя.

// Вторая функция должна вернуть в виде массива все простые числа в промежутке от 1 до n, где n - аргумент функции.

// Вторая функция должна пользоваться первой функцией для определения простых чисел.

// Первая функция не должна быть колбеком, просто рядом лежать, или даже внутри второй функции. На ваш выбор.


function isNumberPrime(n) {
    if (n < 2) {
        return false
    }
    for (let i = 2; i < n; i++) {
        if (n % i === 0) {
            return false
        } 
    }
    return true
}
console.log(isNumberPrime(7));

function getPrimeNumbers(n) {
    const primeNumbers = [];
    for (let i = 2; i <=n; i++) {
        if (isNumberPrime(i)) {
            primeNumbers.push(i);
        }
    }
    return primeNumbers;
}
console.log(getPrimeNumbers(100));



// Функцию, которая принимает массив как первый аргумент, и функцию как второй аргумент.
// возвращает нам новый массив, где каждый элемент, это результат работы функции колбека (которая второй аргумент)
// для каждого элемента входящего массива.

const functionMap = (arr, func) => {
    const resArray = [];
    for (let i = 0; i < arr.length; i++) {
        resArray.push(func(arr[i]));
    }
    return resArray;
}

console.log(functionMap([2, 3, 4, 5, 6, 7, 8, 9, 10], (x) => x + 3));
